{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Private release controller",
      "description": "For getting release collection"
    },
    {
      "name": "User controller",
      "description": "Public controller. For setting up subscription"
    },
    {
      "name": "Private cover controller",
      "description": "For saving covers & release generation by authenticated users"
    },
    {
      "name": "Public cover controller",
      "description": "For covers generation and regeneration"
    },
    {
      "name": "Public playlist controller",
      "description": "For getting archive"
    },
    {
      "name": "Authentication",
      "description": "Public controller"
    },
    {
      "name": "User controller",
      "description": "Private controller. For changing user's properties"
    },
    {
      "name": "Private playlist controller",
      "description": "For getting playlist from different sources"
    }
  ],
  "paths": {
    "/cover/release/generate": {
      "post": {
        "tags": [
          "Private cover controller"
        ],
        "summary": "Request to generate cover for release",
        "operationId": "createReleaseCover",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseNewDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/playlist/generate": {
      "post": {
        "tags": [
          "Public cover controller"
        ],
        "summary": "Request to generate cover for playlist",
        "operationId": "createPlaylistWithCover",
        "parameters": [
          {
            "name": "vibe",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DANCING_FLOOR",
                "NATURE_DOES_NOT_CARE",
                "BREAKING_DOWN",
                "CAMPFIRE_CALMNESS",
                "TOUGH_AND_STRAIGHT",
                "ENDLESS_JOY"
              ]
            }
          },
          {
            "name": "is_abstract",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "is_lofi",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaylistNewDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User's registration",
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User's authorization",
        "operationId": "signIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtAuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/update/username": {
      "patch": {
        "tags": [
          "User controller"
        ],
        "summary": "Update username",
        "operationId": "updateUsername",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/playlist/unlike": {
      "patch": {
        "tags": [
          "Private playlist controller"
        ],
        "summary": "unlike playlist",
        "operationId": "unlikePlaylist",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playlist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/playlist/like": {
      "patch": {
        "tags": [
          "Private playlist controller"
        ],
        "summary": "like playlist",
        "operationId": "likePlaylist",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playlist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/release/save": {
      "patch": {
        "tags": [
          "Private cover controller"
        ],
        "summary": "save release with release_id and cover_id (of chosen cover)",
        "operationId": "saveRelease",
        "parameters": [
          {
            "name": "release_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cover_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseSaveDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/release/regenerate": {
      "patch": {
        "tags": [
          "Private cover controller"
        ],
        "summary": "Request to regenerate cover for release",
        "operationId": "updateReleaseCover",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseUpdateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/playlist/save": {
      "patch": {
        "tags": [
          "Private cover controller"
        ],
        "summary": "save generated playlist using playlistId and boolean isPrivate",
        "operationId": "savePlaylist",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cover_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "is_private",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaylistSaveDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/playlist/regenerate": {
      "patch": {
        "tags": [
          "Public cover controller"
        ],
        "summary": "Request to regenerate cover by playlist id",
        "operationId": "updatePlaylistsCover",
        "parameters": [
          {
            "name": "vibe",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DANCING_FLOOR",
                "NATURE_DOES_NOT_CARE",
                "BREAKING_DOWN",
                "CAMPFIRE_CALMNESS",
                "TOUGH_AND_STRAIGHT",
                "ENDLESS_JOY"
              ]
            }
          },
          {
            "name": "is_abstract",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "playlist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_lofi",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaylistUpdateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/verify/subscription": {
      "get": {
        "tags": [
          "User controller"
        ],
        "summary": "verify subscription",
        "operationId": "verifySubscription",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/subscription": {
      "get": {
        "tags": [
          "User controller"
        ],
        "summary": "get current user's subscription info",
        "operationId": "getUserSubscription",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "User controller"
        ],
        "summary": "get current user's profile info",
        "operationId": "getCurrentUserProfile",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/find": {
      "get": {
        "tags": [
          "User controller"
        ],
        "summary": "search users in 'find users'",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSmallDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/release/my_collection": {
      "get": {
        "tags": [
          "Private release controller"
        ],
        "summary": "get my releases",
        "operationId": "getMyReleases",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseCollectionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/playlist/user_collection": {
      "get": {
        "tags": [
          "Private playlist controller"
        ],
        "summary": "get user's playlists by searching his name in 'find users'",
        "operationId": "getUserPlaylists",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ABSTRACT",
                "NOT_ABSTRACT",
                "LO_FI",
                "HI_FI",
                "DANCING_FLOOR",
                "NATURE_DOES_NOT_CARE",
                "BREAKING_DOWN",
                "CAMPFIRE_CALMNESS",
                "TOUGH_AND_STRAIGHT",
                "ENDLESS_JOY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaylistUserCollectionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/playlist/my_collection": {
      "get": {
        "tags": [
          "Private playlist controller"
        ],
        "summary": "get my playlists",
        "operationId": "getMyPlaylists",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ABSTRACT",
                "NOT_ABSTRACT",
                "LO_FI",
                "HI_FI",
                "DANCING_FLOOR",
                "NATURE_DOES_NOT_CARE",
                "BREAKING_DOWN",
                "CAMPFIRE_CALMNESS",
                "TOUGH_AND_STRAIGHT",
                "ENDLESS_JOY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaylistMyCollectionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/playlist/get": {
      "get": {
        "tags": [
          "Public playlist controller"
        ],
        "summary": "get playlist",
        "operationId": "getPlaylist",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaylistGetDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/playlist/archive": {
      "get": {
        "tags": [
          "Public playlist controller"
        ],
        "summary": "get archive of playlists",
        "operationId": "getArchive",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ABSTRACT",
                "NOT_ABSTRACT",
                "LO_FI",
                "HI_FI",
                "DANCING_FLOOR",
                "NATURE_DOES_NOT_CARE",
                "BREAKING_DOWN",
                "CAMPFIRE_CALMNESS",
                "TOUGH_AND_STRAIGHT",
                "ENDLESS_JOY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaylistArchiveDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/release/generate/style": {
      "get": {
        "tags": [
          "Private cover controller"
        ],
        "summary": "Request to get list of 8 styles that describe final cover of release",
        "operationId": "getCoverStyles",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cover/release/generate/mood": {
      "get": {
        "tags": [
          "Private cover controller"
        ],
        "summary": "Request to get list of 8 adjectives that describe mood of music in release",
        "operationId": "getMusicMoods",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "User's email verification. Used as a link sent to email",
        "operationId": "verifyUser",
        "parameters": [
          {
            "name": "arg0",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "header": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "ReleaseRequest": {
        "required": [
          "isLoFi"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Title of track/album",
            "example": "Slippery rock"
          },
          "mood": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "description": "List of adjectives / short phrases",
            "example": "Foggy, Slow, Nostalgic",
            "items": {
              "type": "string",
              "description": "List of adjectives / short phrases",
              "example": "Foggy, Slow, Nostalgic"
            }
          },
          "object": {
            "maxLength": 255,
            "minLength": 2,
            "type": "string",
            "description": "Object / action that we see on the cover",
            "example": "wet stone covered with moss, glows a little"
          },
          "surrounding": {
            "maxLength": 255,
            "minLength": 2,
            "type": "string",
            "description": "Description of surrounding of an object or action",
            "example": "forest edge, the sun breaks through the bark of the trees"
          },
          "isLoFi": {
            "type": "boolean",
            "description": "Model of visual AI: dalle-2 or dalle-3"
          },
          "coverDescription": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "description": "List of adjectives / short phrases that describe cover's style",
            "example": "Blurred, 3D",
            "items": {
              "type": "string",
              "description": "List of adjectives / short phrases that describe cover's style",
              "example": "Blurred, 3D"
            }
          }
        }
      },
      "CoverReleaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string"
          },
          "isLoFi": {
            "type": "boolean"
          },
          "prompt": {
            "type": "string"
          },
          "isSaved": {
            "type": "boolean"
          }
        }
      },
      "ReleaseNewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserReleaseDto"
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverReleaseDto"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserReleaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "hiFiReleaseGenerations": {
            "type": "integer",
            "format": "int32"
          },
          "loFiReleaseGenerations": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UrlDto": {
        "required": [
          "link"
        ],
        "type": "object",
        "properties": {
          "link": {
            "maxLength": 1000,
            "minLength": 5,
            "type": "string"
          }
        }
      },
      "CoverPlaylistDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "isAbstract": {
            "type": "boolean"
          },
          "isLoFi": {
            "type": "boolean"
          },
          "isSaved": {
            "type": "boolean"
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          }
        }
      },
      "PlaylistNewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          },
          "isPrivate": {
            "type": "boolean"
          },
          "isSaved": {
            "type": "boolean"
          },
          "author": {
            "$ref": "#/components/schemas/UserSmallDto"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackInPlaylistDto"
            }
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverPlaylistDto"
            }
          },
          "hiFiGenerationsLeft": {
            "type": "integer",
            "format": "int32"
          },
          "loFiGenerationsLeft": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TrackInPlaylistDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "authors": {
            "type": "string"
          }
        }
      },
      "UserSmallDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "loFiPlaylistGenerations": {
            "type": "integer",
            "format": "int32"
          },
          "hiFiPlaylistGenerations": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SignUpRequest": {
        "required": [
          "email",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 30,
            "minLength": 2,
            "pattern": "^(?=\\S+$).*$",
            "type": "string",
            "description": "Username",
            "example": "Jon"
          },
          "email": {
            "maxLength": 254,
            "minLength": 6,
            "type": "string",
            "description": "User's email address",
            "example": "jondoe@gmail.com"
          },
          "password": {
            "maxLength": 27,
            "minLength": 8,
            "type": "string",
            "description": "Password",
            "example": "Kozyasolov12!"
          }
        },
        "description": "Sign up request"
      },
      "SignInRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 254,
            "minLength": 6,
            "type": "string",
            "description": "Email address",
            "example": "jondoe@gmail.com"
          },
          "password": {
            "maxLength": 27,
            "minLength": 8,
            "type": "string",
            "description": "Password",
            "example": "kozyasolov12!"
          }
        },
        "description": "Sign in request"
      },
      "JwtAuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token",
            "example": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTYyMjUwNj..."
          }
        },
        "description": "Response with token"
      },
      "UserUpdateDto": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          }
        }
      },
      "ReleaseSaveDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserReleaseDto"
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverReleaseDto"
            }
          },
          "saved": {
            "type": "boolean"
          },
          "savedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReleaseUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserReleaseDto"
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverReleaseDto"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlaylistSaveDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "author": {
            "$ref": "#/components/schemas/UserSmallDto"
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          },
          "savedAt": {
            "type": "string",
            "format": "date-time"
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverPlaylistDto"
            }
          }
        }
      },
      "PlaylistUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverPlaylistDto"
            }
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          },
          "author": {
            "$ref": "#/components/schemas/UserSmallDto"
          },
          "hiFiGenerationsLeft": {
            "type": "integer",
            "format": "int32"
          },
          "loFiGenerationsLeft": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserSubscriptionDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "subscribed": {
            "type": "boolean"
          },
          "generationsLeft": {
            "type": "integer",
            "format": "int32"
          },
          "generationsUpdateAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "hiFiReleaseGenerations": {
            "type": "integer",
            "format": "int32"
          },
          "loFiReleaseGenerations": {
            "type": "integer",
            "format": "int32"
          },
          "hiFiPlaylistGenerations": {
            "type": "integer",
            "format": "int32"
          },
          "loFiPlaylistGenerations": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReleaseCollectionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserReleaseDto"
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverReleaseDto"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlaylistUserCollectionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackInPlaylistDto"
            }
          },
          "cover": {
            "$ref": "#/components/schemas/CoverPlaylistDto"
          },
          "isLiked": {
            "type": "boolean"
          }
        }
      },
      "PlaylistMyCollectionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          },
          "isPrivate": {
            "type": "boolean"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackInPlaylistDto"
            }
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverPlaylistDto"
            }
          },
          "isLiked": {
            "type": "boolean"
          }
        }
      },
      "PlaylistGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackInPlaylistDto"
            }
          },
          "covers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverPlaylistDto"
            }
          },
          "isLiked": {
            "type": "boolean"
          }
        }
      },
      "PlaylistArchiveDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vibe": {
            "type": "string",
            "enum": [
              "DANCING_FLOOR",
              "NATURE_DOES_NOT_CARE",
              "BREAKING_DOWN",
              "CAMPFIRE_CALMNESS",
              "TOUGH_AND_STRAIGHT",
              "ENDLESS_JOY"
            ]
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackInPlaylistDto"
            }
          },
          "cover": {
            "$ref": "#/components/schemas/CoverPlaylistDto"
          },
          "isLiked": {
            "type": "boolean"
          }
        }
      }
    }
  }
}